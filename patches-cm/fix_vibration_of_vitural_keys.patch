
project frameworks/base/
diff --git a/frameworks/base/data/keyboards/Generic.kl b/frameworks/base/data/keyboards/Generic.kl
index f10ba96..7ea5b9d 100644
--- a/frameworks/base/data/keyboards/Generic.kl
+++ b/frameworks/base/data/keyboards/Generic.kl
@@ -121,7 +121,10 @@ key 98    NUMPAD_DIVIDE
 key 99    SYSRQ
 key 100   ALT_RIGHT
 # key 101 "KEY_LINEFEED"
-key 102   MOVE_HOME
+#/* ZTEMT Modify by luochangyang, 2013/03/27 */
+#key 102   MOVE_HOME
+key 102   HOME              VIRTUAL
+#/* ZTEMT END */
 key 103   DPAD_UP
 key 104   PAGE_UP
 key 105   DPAD_LEFT
@@ -158,7 +161,10 @@ key 128   MEDIA_STOP
 # key 136 "KEY_FIND"
 # key 137 "KEY_CUT"
 # key 138 "KEY_HELP"
-key 139   MENU
+#/* ZTEMT Modify by luochangyang, 2013/06/04 */
+#key 139   MENU              WAKE_DROPPED
+key 139   MENU              VIRTUAL
+#/* ZTEMT END */
 key 140   CALCULATOR
 # key 141 "KEY_SETUP"
 key 142   SLEEP
@@ -177,7 +183,10 @@ key 152   POWER
 key 155   ENVELOPE
 key 156   BOOKMARK
 # key 157 "KEY_COMPUTER"
-key 158   BACK
+#/* ZTEMT Modify by luochangyang, 2013/06/04 */
+#key 158   BACK              WAKE_DROPPED
+key 158   BACK              VIRTUAL
+#/* ZTEMT END */
 key 159   FORWARD
 key 160   MEDIA_CLOSE
 key 161   MEDIA_EJECT
diff --git a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index 5ff9bd2..501046c 100644
--- a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -2897,6 +2897,21 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             WindowManager.LayoutParams.TYPE_SYSTEM_ERROR,
         };
 
+    private void setHwKeyVib(WindowState win) {
+            WindowManager.LayoutParams attrs;
+            Intent service;
+            ContentResolver res;
+            // If a system window has focus, then it doesn't make sense
+            // right now to interact with applications.
+            attrs = win != null ? win.getAttrs() : null;
+            service = new Intent();
+            res = mContext.getContentResolver();
+            if(1 == Settings.System.getInt(res, Settings.System.HAPTIC_FEEDBACK_ENABLED,0))//when setting feedback enable
+              {
+                performHapticFeedbackLw(null, HapticFeedbackConstants.KEYBOARD_TAP, true); //add by syhost
+              }
+    }
+
     /** {@inheritDoc} */
     @Override
     public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int policyFlags) {
@@ -3029,6 +3044,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     return -1;
                 }
 
+                setHwKeyVib(win);
                 handleShortPressOnHome();
                 return -1;
             }
@@ -3094,6 +3110,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 }
                 if (repeatCount == 0) {
                     mMenuPressed = true;
+                    setHwKeyVib(win);
                     if (mEnableShiftMenuBugReports && (metaState & chordBug) == chordBug) {
                         Intent intent = new Intent(Intent.ACTION_BUG_REPORT);
                         mContext.sendOrderedBroadcastAsUser(intent, UserHandle.CURRENT,
@@ -3276,9 +3293,13 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_BACK) {
+            if (down && repeatCount == 0) {
+                setHwKeyVib(win);
+            }
             if (unpinActivity(true) || Settings.Secure.getInt(mContext.getContentResolver(),
                     Settings.Secure.KILL_APP_LONGPRESS_BACK, 0) == 1) {
                 if (down && repeatCount == 0) {
+                    setHwKeyVib(win);
                     mHandler.postDelayed(mBackLongPress, mBackKillTimeout);
                 }
             }
